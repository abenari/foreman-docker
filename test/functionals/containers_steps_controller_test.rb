require 'test_plugin_helper'

module Containers
  class StepsControllerTest < ActionController::TestCase
    setup do
      @container = FactoryGirl.create(:container)
    end

    test 'wizard finishes with a redirect to the managed container' do
      state = DockerContainerWizardState.create!
      ForemanDocker::Service::Containers.any_instance.expects(:start_container!)
        .with(equals(state)).returns(@container)
      put :update, { :wizard_state_id => state.id,
                     :id => :environment,
                     :docker_container_wizard_states_environment => { :tty => false } },
          set_session_user

      assert_redirected_to container_path(:id => @container.id)
    end

    test 'image show doesnot load katello' do
      compute_resource = FactoryGirl.create(:docker_cr)
      state = DockerContainerWizardState.create!
      create_options = { :wizard_state => state,
                         :compute_resource_id => compute_resource.id

                       }
      state.preliminary = DockerContainerWizardStates::Preliminary.create!(create_options)
      DockerContainerWizardState.expects(:find).at_least_once.returns(state)
      get :show, { :wizard_state_id => state.id, :id => :image }, set_session_user
      refute state.image.katello?
      refute response.body.include?("katello") # this is code generated by katello partial
      docker_image = @controller.instance_eval do
        @docker_container_wizard_states_image
      end
      assert_equal state.image, docker_image
    end
  end
end
